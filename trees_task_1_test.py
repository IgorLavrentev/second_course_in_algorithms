## Этот файл предназначен для тестирования trees_task_1.py
import unittest

from trees_task_1 import SimpleTreeNode, SimpleTree

class MyTests(unittest.TestCase):

    def test1(self): # добавление к текущему узлу 
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        self.assertEqual(T.Root.Children[0].NodeValue, 2)
        self.assertEqual(T.Root.Children[1].NodeValue, 3)
        self.assertEqual(N_2.Children[0].NodeValue, 4)

    def test2(self): # удаление некорневого узла
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        self.assertEqual(T.Root.Children[0].NodeValue, 2)
        self.assertEqual(T.Root.Children[1].NodeValue, 3)
        T.DeleteNode(N_2)
        self.assertEqual(T.Root.Children[0].NodeValue, 3)

    def test22(self): # удаление некорневого узла
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        T.DeleteNode(N_2)
        self.assertEqual(T.Root.Children[0].NodeValue, 3)
        self.assertEqual(T.Root.Children[1].NodeValue, 6)

    def test3(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)

    def test31(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)

    def test32(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test33(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        self.assertEqual(all_Nodes[6].NodeValue, 7)

    def test34(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test35(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        T = SimpleTree(N_1)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)

    def test36(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        T.MoveNode(N_5, N_3)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test37(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        T.MoveNode(N_4, N_5)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test38(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        T.MoveNode(N_3, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test39(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        T.MoveNode(N_2, N_4)
        T.MoveNode(N_3, N_6)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)

    def test391(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        T.MoveNode(N_3, N_2)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)

    def test392(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        N_7 = SimpleTreeNode(7, 3)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        T.AddChild(N_3, N_7)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        self.assertEqual(all_Nodes[6].NodeValue, 7)

        self.assertEqual(T.Count(), 7)
        self.assertEqual(T.LeafCount(), 4)

        T.MoveNode(N_3, N_4)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        self.assertEqual(all_Nodes[6].NodeValue, 7)
        self.assertEqual(N_3.Parent, 4)
    
        self.assertEqual(T.Count(), 7)
        self.assertEqual(T.LeafCount(), 3)

    def test393(self): # список всех узлов дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        N_7 = SimpleTreeNode(7, 3)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        T.AddChild(N_3, N_7)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        self.assertEqual(all_Nodes[6].NodeValue, 7)

        self.assertEqual(T.Count(), 7)
        self.assertEqual(T.LeafCount(), 4)
        self.assertEqual(len(all_Nodes), 7)

        T.MoveNode(N_2, N_4)
        all_Nodes = T.GetAllNodes()
        self.assertEqual(all_Nodes[0].NodeValue, 1)
        self.assertEqual(all_Nodes[1].NodeValue, 2)
        self.assertEqual(all_Nodes[2].NodeValue, 3)
        self.assertEqual(all_Nodes[3].NodeValue, 4)
        self.assertEqual(all_Nodes[4].NodeValue, 5)
        self.assertEqual(all_Nodes[5].NodeValue, 6)
        self.assertEqual(all_Nodes[6].NodeValue, 7)
        self.assertEqual(N_2.Parent, 4)
    
        self.assertEqual(T.Count(), 7)
        self.assertEqual(T.LeafCount(), 3)
        self.assertEqual(len(all_Nodes), 7)

    def test4(self): # список всех узлов по заданному значению
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        found_node = T.FindNodesByValue(3)
        self.assertEqual(found_node[0].NodeValue, 3)

    def test41(self): # список всех узлов по заданному значению
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        found_node = T.FindNodesByValue(6)
        self.assertEqual(found_node[0].Parent, 1)
        self.assertEqual(found_node[0].NodeValue, 6)
        self.assertEqual(found_node[0].Children[0].NodeValue, 7)

    def test42(self): # список всех узлов по заданному значению
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(7, 2) # отличие
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6) 
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        found_node = T.FindNodesByValue(7)
        self.assertEqual(found_node[0].Parent, 2)
        self.assertEqual(found_node[0].NodeValue, 7)
        self.assertEqual(found_node[0].Children[0].NodeValue, 5)
        self.assertEqual(found_node[1].Parent, 6)
        self.assertEqual(found_node[1].NodeValue, 7)
        self.assertEqual(found_node[1].Children, [])

    def test43(self): # список всех узлов по заданному значению
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        found_node = T.FindNodesByValue(6)
        self.assertEqual(found_node[0].Parent, 2)
        self.assertEqual(found_node[0].NodeValue, 6)
        self.assertEqual(found_node[0].Children, [])

    def test5(self): # перемещение некорневого узла дочерниму узлу в другое место дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.MoveNode(N_3, N_2) # перемещение
        self.assertEqual(N_2.Children[0].NodeValue, 3)
        self.assertEqual(len(N_1.Children), 1)

    def test51(self): # перемещение некорневого узла дочерниму узлу в другое место дерева
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        T.MoveNode(N_5, N_7) # перемещение
        self.assertEqual(N_4.Children, [])
        self.assertEqual(N_7.Children[0].NodeValue, 5)

    def test6(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        self.assertEqual(T.Count(), 3)

    def test61(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        self.assertEqual(T.Count(), 7)

    def test62(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        self.assertEqual(T.Count(), 6)

    def test63(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        T = SimpleTree(N_1)
        self.assertEqual(T.Count(), 1)

    def test64(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        self.assertEqual(T.Count(), 6)

    def test7(self): # количество листьев в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        self.assertEqual(T.LeafCount(), 2)

    def test71(self): # количество листьев в дереве
        N_1 = SimpleTreeNode(1, None)
        T = SimpleTree(N_1)
        self.assertEqual(T.LeafCount(), 1)

    def test72(self): # количество листьев в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 2)
        N_5 = SimpleTreeNode(5, 4)
        N_6 = SimpleTreeNode(6, 1)
        N_7 = SimpleTreeNode(7, 6)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_2, N_4)
        T.AddChild(N_4, N_5)
        T.AddChild(N_1, N_6)
        T.AddChild(N_6, N_7)
        self.assertEqual(T.LeafCount(), 3)

    def test73(self): # количество всех узлов в дереве
        N_1 = SimpleTreeNode(1, None)
        N_2 = SimpleTreeNode(2, 1)
        N_3 = SimpleTreeNode(3, 1)
        N_4 = SimpleTreeNode(4, 1)
        N_5 = SimpleTreeNode(5, 2)
        N_6 = SimpleTreeNode(6, 2)
        T = SimpleTree(N_1)
        T.AddChild(N_1, N_2)
        T.AddChild(N_1, N_3)
        T.AddChild(N_1, N_4)
        T.AddChild(N_2, N_5)
        T.AddChild(N_2, N_6)
        self.assertEqual(T.LeafCount(), 4)

if __name__ == '__main__':
    unittest.main()